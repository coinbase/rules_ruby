#!/usr/bin/env bash
# vim: ft=sh

__version::detect() {
  local file="$1"
  if [[ -f ${file} ]]; then
    /bin/cat "${file}" | head -1
  else
    printf ''
  fi
}

[[ -f .bazelversion ]] || {
  error "Can't find .bazelversion file, required for installing Bazel!"
  exit 1
}

# Application Constants
export RulesRuby__RulesVersion=$(__version::detect .rules_version)
export RulesRuby__RubyVersion=$(__version::detect .ruby_version)
export RulesRuby__BazelVersion=$(__version::detect .bazelversion)

bazel-sha() {
  bazel info | grep output_path | awk 'BEGIN{FS="/"}{ for(i = 1; i <= NF; i++) { if (length($i) == 32) print $i; } }'
}

help-header() {
  printf "${bldylw}$*${clr}"
}

help-usage() {
  printf "  ${bldgrn}$*${clr}"
}

help-example() {
  printf "    ${bldpur}$*${clr}"
}

deps::start-clock() {
  export __start=$(date +%s)
}

deps::print-duration() {
  local finish=$(date +%s)
  local duration=$(( finish - __start ))
  info "Total running time for was ${bldylw}${duration} seconds.\n\n"
}

# ensure we can exit with Ctrl-C
trap exit 1 INT
